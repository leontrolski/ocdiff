name: CI

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request: {}

jobs:
  build:
    name: build py${{ matrix.python-version }} on ${{ matrix.platform || matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-13
          - macos-14
          # - windows
        python-version:
          - '3.11'
          - '3.12'
        include:
          - os: ubuntu-22.04
            platform: linux
          - os: macos-13
            platform: macos
          - os: macos-14
            platform: macos
          # - os: windows
          #   ls: dir
          - python-version: 3.11
            cibw-version: cp311
          - python-version: 3.12
            cibw-version: cp312

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: set up python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: set up rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.74.0
          profile: minimal
          default: true
          override: true

      - name: install python dependencies
        run: |
          pip install cibuildwheel==2.17.0 twine

      - name: build ${{ matrix.platform || matrix.os }} binaries
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: '${{ matrix.cibw-version }}-*'
          CIBW_SKIP: '*-win32 *-musllinux*'
          CIBW_PLATFORM: ${{ matrix.platform || matrix.os }}
          CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
          CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
          CIBW_BEFORE_BUILD: >
            rustup show
          CIBW_BEFORE_BUILD_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- --profile=minimal -y &&
            rustup show
          CIBW_TEST_COMMAND: "pytest {project}/tests"
          CIBW_TEST_EXTRAS: test

      # - name: build windows 32bit binaries
      #   if: matrix.os == 'windows'
      #   run: python -m cibuildwheel --output-dir wheelhouse
      #   env:
      #     CIBW_BUILD: '${{ matrix.cibw-version }}-win32'
      #     CIBW_PLATFORM: windows
      #     CIBW_ENVIRONMENT: 'PATH="$UserProfile\.cargo\bin;$PATH"'
      #     CIBW_BEFORE_BUILD: >
      #       rustup default stable-i686-pc-windows-msvc &&
      #       rustup show
      #     CIBW_TEST_COMMAND: "pytest {project}/tests"
      #     CIBW_TEST_EXTRAS: test

      # - name: Upload to github releases
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: svenstaro/upload-release-action@v2
      #   with:
      #     repo_token: ${{ secrets.GITHUB_TOKEN }}
      #     file: dist/*.whl
      #     file_glob: true
      #     tag: ${{ github.ref }}

      - name: upload to pypi
        if: startsWith(github.ref, 'refs/tags/')
        run: twine upload wheelhouse/*.whl
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
